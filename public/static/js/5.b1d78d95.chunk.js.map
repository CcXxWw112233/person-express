{"version":3,"sources":["page/Home/index.less","page/Home/VisualList.js","page/Home/index.js"],"names":["module","exports","VisualList","props","rowRenderer","key","index","style","isScrolling","isVisible","girl_friends","name","state","s","x","this","width","height","rowCount","length","rowHeight","Component","aa","console","log","connect","userInfo","options","className","styles","bb"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,oC,8HCItBC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,YAAc,YAMP,IALHC,EAKE,EALFA,IACAC,EAIE,EAJFA,MAGAC,GACE,EAHFC,YAGE,EAFFC,UAEE,EADFF,OACE,EAC4B,EAAKJ,MAA3BO,oBADN,MACqB,GADrB,EAEF,OACI,yBAAKL,IAAKA,EAAKE,MAAOA,GACjBG,EAAaJ,GAAOK,OAlB7B,EAAKC,MAAQ,CACTC,EAAG,GAEP,EAAKC,EAAI,IALM,E,qDAyBT,IAAD,EACyBC,KAAKZ,MAA3BO,oBADH,MACkB,GADlB,EAEL,OACI,kBAAC,IAAD,CACIM,MAAO,IACPC,OAAQ,IACRC,SAAUR,EAAaS,OACvBC,UAAW,GACXhB,YAAaW,KAAKX,kB,GAlCMiB,aAAnBnB,EAQVoB,GAAK,WACRC,QAAQC,IAAI,IATCtB,EASSY,IA8B9BZ,EAAWoB,KClBIG,uBARS,SAAC,GACrB,MAAO,CACHC,SAFkC,EAAfA,YAQZD,EArBF,SAACE,GAAa,IAAD,EACuBA,EAArCD,SAAYf,EADE,EACFA,KAAMD,EADJ,EACIA,aAE1B,OADAa,QAAQC,IAAI,OAAQ,CAAEd,iBAElB,yBAAKkB,UAAWC,IAAOP,IAAvB,OAEI,yBAAKM,UAAWC,IAAOC,IAClBnB,GAEL,kBAAC,EAAD,CAAYD,aAAcA","file":"static/js/5.b1d78d95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.8e67a256.less\";","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { List } from 'react-virtualized';\r\n\r\nexport default class VisualList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            s: 1\r\n        }\r\n        this.x = '2'\r\n    }\r\n    static aa = () => {\r\n        console.log('a', this.x)\r\n    }\r\n    rowRenderer = ({\r\n        key, // Unique key within array of rows\r\n        index, // Index of row within collection\r\n        isScrolling, // The List is currently being scrolled\r\n        isVisible, // This row is visible within the List (eg it is not an overscanned row)\r\n        style, // Style object to be applied to row (to position it)\r\n    }) => {\r\n        const { girl_friends = [] } = this.props\r\n        return (\r\n            <div key={key} style={style}>\r\n                {girl_friends[index].name}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { girl_friends = [] } = this.props\r\n        return (\r\n            <List\r\n                width={300}\r\n                height={300}\r\n                rowCount={girl_friends.length}\r\n                rowHeight={20}\r\n                rowRenderer={this.rowRenderer}\r\n            />\r\n        )\r\n    }\r\n}\r\nVisualList.aa()\r\nVisualList.propTypes = {\r\n    girl_friends: PropTypes.array\r\n}","import React, { Component } from 'react'\r\nimport styles from './index.less'\r\nimport { connect } from 'react-redux'\r\nimport VisualList from './VisualList'\r\nconst Home = (options) => {\r\n    const { userInfo: { name, girl_friends } } = options\r\n    console.log('ssss', { girl_friends })\r\n    return (\r\n        <div className={styles.aa}>\r\n            Home\r\n            <div className={styles.bb}>\r\n                {name}\r\n            </div>\r\n            <VisualList girl_friends={girl_friends} />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = ({ userInfo }) => {\r\n    return {\r\n        userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = {}\r\n// 使用connect 关联redux\r\nexport default connect(mapStateToProps)(Home)\r\n"],"sourceRoot":""}